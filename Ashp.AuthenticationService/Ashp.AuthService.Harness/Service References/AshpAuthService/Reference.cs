//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ashp.AuthService.Harness.AshpAuthService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AshpAuthService.IAuthService")]
    public interface IAuthService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/WhoAmI", ReplyAction="http://tempuri.org/IAuthService/WhoAmIResponse")]
        string WhoAmI();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/WhoAmI", ReplyAction="http://tempuri.org/IAuthService/WhoAmIResponse")]
        System.Threading.Tasks.Task<string> WhoAmIAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetClientIPAddress", ReplyAction="http://tempuri.org/IAuthService/GetClientIPAddressResponse")]
        string GetClientIPAddress(string whatever);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetClientIPAddress", ReplyAction="http://tempuri.org/IAuthService/GetClientIPAddressResponse")]
        System.Threading.Tasks.Task<string> GetClientIPAddressAsync(string whatever);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Authenticate", ReplyAction="http://tempuri.org/IAuthService/AuthenticateResponse")]
        string Authenticate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Authenticate", ReplyAction="http://tempuri.org/IAuthService/AuthenticateResponse")]
        System.Threading.Tasks.Task<string> AuthenticateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/IPAuthenticate", ReplyAction="http://tempuri.org/IAuthService/IPAuthenticateResponse")]
        string IPAuthenticate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/IPAuthenticate", ReplyAction="http://tempuri.org/IAuthService/IPAuthenticateResponse")]
        System.Threading.Tasks.Task<string> IPAuthenticateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/IsAuthenticated", ReplyAction="http://tempuri.org/IAuthService/IsAuthenticatedResponse")]
        bool IsAuthenticated();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/IsAuthenticated", ReplyAction="http://tempuri.org/IAuthService/IsAuthenticatedResponse")]
        System.Threading.Tasks.Task<bool> IsAuthenticatedAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthServiceChannel : Ashp.AuthService.Harness.AshpAuthService.IAuthService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthServiceClient : System.ServiceModel.ClientBase<Ashp.AuthService.Harness.AshpAuthService.IAuthService>, Ashp.AuthService.Harness.AshpAuthService.IAuthService {
        
        public AuthServiceClient() {
        }
        
        public AuthServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string WhoAmI() {
            return base.Channel.WhoAmI();
        }
        
        public System.Threading.Tasks.Task<string> WhoAmIAsync() {
            return base.Channel.WhoAmIAsync();
        }
        
        public string GetClientIPAddress(string whatever) {
            return base.Channel.GetClientIPAddress(whatever);
        }
        
        public System.Threading.Tasks.Task<string> GetClientIPAddressAsync(string whatever) {
            return base.Channel.GetClientIPAddressAsync(whatever);
        }
        
        public string Authenticate() {
            return base.Channel.Authenticate();
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateAsync() {
            return base.Channel.AuthenticateAsync();
        }
        
        public string IPAuthenticate() {
            return base.Channel.IPAuthenticate();
        }
        
        public System.Threading.Tasks.Task<string> IPAuthenticateAsync() {
            return base.Channel.IPAuthenticateAsync();
        }
        
        public bool IsAuthenticated() {
            return base.Channel.IsAuthenticated();
        }
        
        public System.Threading.Tasks.Task<bool> IsAuthenticatedAsync() {
            return base.Channel.IsAuthenticatedAsync();
        }
    }
}
